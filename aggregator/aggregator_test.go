package aggregator

import (
	"fmt"
	datamock "ohlc-aggregator/data-mock"
	"ohlc-aggregator/models"
	"strconv"
	"strings"
	"testing"
	"time"
)

var (
	QUEUE_SIZE = 100
)

var data = `Ticker: 2024-04-23 13:26:00.492837473 +0530 IST m=+10.001102448 , LTP: 168.000000, LTT: 2024-04-23 13:26:00.492886167 +0530 IST m=+10.001151146
Ticker: 2024-04-23 13:26:01.492063248 +0530 IST m=+11.000328198 , LTP: 199.000000, LTT: 2024-04-23 13:26:01.492112291 +0530 IST m=+11.000377244
Ticker: 2024-04-23 13:26:02.492382932 +0530 IST m=+12.000647901 , LTP: 151.000000, LTT: 2024-04-23 13:26:02.49242842 +0530 IST m=+12.000693405
Ticker: 2024-04-23 13:26:03.49270998 +0530 IST m=+13.000974965 , LTP: 195.000000, LTT: 2024-04-23 13:26:03.49277101 +0530 IST m=+13.001035991
Ticker: 2024-04-23 13:26:04.491898312 +0530 IST m=+14.000163265 , LTP: 199.000000, LTT: 2024-04-23 13:26:04.491933945 +0530 IST m=+14.000198897
Ticker: 2024-04-23 13:26:05.492132098 +0530 IST m=+15.000397079 , LTP: 159.000000, LTT: 2024-04-23 13:26:05.492187293 +0530 IST m=+15.000452272
Ticker: 2024-04-23 13:26:06.492499497 +0530 IST m=+16.000764485 , LTP: 166.000000, LTT: 2024-04-23 13:26:06.492577942 +0530 IST m=+16.000842927
Ticker: 2024-04-23 13:26:07.492843211 +0530 IST m=+17.001108184 , LTP: 157.000000, LTT: 2024-04-23 13:26:07.492883508 +0530 IST m=+17.001148471
Ticker: 2024-04-23 13:26:08.491998471 +0530 IST m=+18.000263422 , LTP: 115.000000, LTT: 2024-04-23 13:26:08.49202621 +0530 IST m=+18.000291161
Ticker: 2024-04-23 13:26:09.492254659 +0530 IST m=+19.000519652 , LTP: 198.000000, LTT: 2024-04-23 13:26:09.492304198 +0530 IST m=+19.000569183
Ticker: 2024-04-23 13:26:10.492531007 +0530 IST m=+20.000795992 , LTP: 118.000000, LTT: 2024-04-23 13:26:10.492573808 +0530 IST m=+20.000838796
Ticker: 2024-04-23 13:26:11.49291905 +0530 IST m=+21.001184006 , LTP: 176.000000, LTT: 2024-04-23 13:26:11.492965498 +0530 IST m=+21.001230454
Ticker: 2024-04-23 13:26:12.492115116 +0530 IST m=+22.000380106 , LTP: 124.000000, LTT: 2024-04-23 13:26:12.492168039 +0530 IST m=+22.000433023
Ticker: 2024-04-23 13:26:13.492386791 +0530 IST m=+23.000651746 , LTP: 112.000000, LTT: 2024-04-23 13:26:13.492410561 +0530 IST m=+23.000675513
Ticker: 2024-04-23 13:26:14.49235394 +0530 IST m=+24.000618956 , LTP: 197.000000, LTT: 2024-04-23 13:26:14.492423709 +0530 IST m=+24.000688704
Ticker: 2024-04-23 13:26:15.492736672 +0530 IST m=+25.001001664 , LTP: 170.000000, LTT: 2024-04-23 13:26:15.492790406 +0530 IST m=+25.001055391
Ticker: 2024-04-23 13:26:16.492255135 +0530 IST m=+26.000520125 , LTP: 111.000000, LTT: 2024-04-23 13:26:16.492336908 +0530 IST m=+26.000601895
Ticker: 2024-04-23 13:26:17.492652361 +0530 IST m=+27.000917349 , LTP: 134.000000, LTT: 2024-04-23 13:26:17.49271656 +0530 IST m=+27.000981545
Ticker: 2024-04-23 13:26:18.491999327 +0530 IST m=+28.000264305 , LTP: 164.000000, LTT: 2024-04-23 13:26:18.492040527 +0530 IST m=+28.000305502
Ticker: 2024-04-23 13:26:19.492267049 +0530 IST m=+29.000532040 , LTP: 148.000000, LTT: 2024-04-23 13:26:19.492325212 +0530 IST m=+29.000590200
Ticker: 2024-04-23 13:26:20.492550513 +0530 IST m=+30.000815474 , LTP: 189.000000, LTT: 2024-04-23 13:26:20.4925786 +0530 IST m=+30.000843561
Ticker: 2024-04-23 13:26:21.492823462 +0530 IST m=+31.001088421 , LTP: 153.000000, LTT: 2024-04-23 13:26:21.492857837 +0530 IST m=+31.001122798
Ticker: 2024-04-23 13:26:22.49210973 +0530 IST m=+32.000374716 , LTP: 159.000000, LTT: 2024-04-23 13:26:22.492162027 +0530 IST m=+32.000427006
Ticker: 2024-04-23 13:26:23.492418145 +0530 IST m=+33.000683125 , LTP: 196.000000, LTT: 2024-04-23 13:26:23.492490764 +0530 IST m=+33.000755752
Ticker: 2024-04-23 13:26:24.492816677 +0530 IST m=+34.001081665 , LTP: 142.000000, LTT: 2024-04-23 13:26:24.49288184 +0530 IST m=+34.001146827
Ticker: 2024-04-23 13:26:25.492262341 +0530 IST m=+35.000527329 , LTP: 116.000000, LTT: 2024-04-23 13:26:25.492322554 +0530 IST m=+35.000587546
Ticker: 2024-04-23 13:26:26.492665251 +0530 IST m=+36.000930240 , LTP: 186.000000, LTT: 2024-04-23 13:26:26.492723096 +0530 IST m=+36.000988082
Ticker: 2024-04-23 13:26:27.492038818 +0530 IST m=+37.000303809 , LTP: 144.000000, LTT: 2024-04-23 13:26:27.49209924 +0530 IST m=+37.000364225
Ticker: 2024-04-23 13:26:28.492420467 +0530 IST m=+38.000685449 , LTP: 107.000000, LTT: 2024-04-23 13:26:28.492466026 +0530 IST m=+38.000731004
Ticker: 2024-04-23 13:26:29.492660633 +0530 IST m=+39.000925598 , LTP: 178.000000, LTT: 2024-04-23 13:26:29.49269799 +0530 IST m=+39.000962957
Ticker: 2024-04-23 13:26:30.492115368 +0530 IST m=+40.000380342 , LTP: 173.000000, LTT: 2024-04-23 13:26:30.492162002 +0530 IST m=+40.000426975
Ticker: 2024-04-23 13:26:31.492390956 +0530 IST m=+41.000655921 , LTP: 109.000000, LTT: 2024-04-23 13:26:31.492434088 +0530 IST m=+41.000699051
Ticker: 2024-04-23 13:26:32.4926546 +0530 IST m=+42.000919601 , LTP: 105.000000, LTT: 2024-04-23 13:26:32.492713043 +0530 IST m=+42.000978102
Ticker: 2024-04-23 13:26:33.492018734 +0530 IST m=+43.000283701 , LTP: 122.000000, LTT: 2024-04-23 13:26:33.492065504 +0530 IST m=+43.000330471
Ticker: 2024-04-23 13:26:34.492302206 +0530 IST m=+44.000567191 , LTP: 123.000000, LTT: 2024-04-23 13:26:34.4923735 +0530 IST m=+44.000638481
Ticker: 2024-04-23 13:26:35.492611805 +0530 IST m=+45.000876790 , LTP: 105.000000, LTT: 2024-04-23 13:26:35.492671774 +0530 IST m=+45.000936755
Ticker: 2024-04-23 13:26:36.492854715 +0530 IST m=+46.001119664 , LTP: 151.000000, LTT: 2024-04-23 13:26:36.49287898 +0530 IST m=+46.001143928
Ticker: 2024-04-23 13:26:37.492113996 +0530 IST m=+47.000378966 , LTP: 147.000000, LTT: 2024-04-23 13:26:37.492160735 +0530 IST m=+47.000425716
Ticker: 2024-04-23 13:26:38.492270701 +0530 IST m=+48.000535660 , LTP: 101.000000, LTT: 2024-04-23 13:26:38.492287735 +0530 IST m=+48.000552686
Ticker: 2024-04-23 13:26:39.492636864 +0530 IST m=+49.000901854 , LTP: 151.000000, LTT: 2024-04-23 13:26:39.492703555 +0530 IST m=+49.000968540
Ticker: 2024-04-23 13:26:40.491850367 +0530 IST m=+50.000115322 , LTP: 155.000000, LTT: 2024-04-23 13:26:40.491878329 +0530 IST m=+50.000143282
Ticker: 2024-04-23 13:26:41.492200491 +0530 IST m=+51.000465452 , LTP: 179.000000, LTT: 2024-04-23 13:26:41.492233907 +0530 IST m=+51.000498866
Ticker: 2024-04-23 13:26:42.492397464 +0530 IST m=+52.000662414 , LTP: 187.000000, LTT: 2024-04-23 13:26:42.492418115 +0530 IST m=+52.000683066
Ticker: 2024-04-23 13:26:43.492645276 +0530 IST m=+53.000910266 , LTP: 131.000000, LTT: 2024-04-23 13:26:43.492712828 +0530 IST m=+53.000977817
Ticker: 2024-04-23 13:26:44.492841747 +0530 IST m=+54.001106721 , LTP: 198.000000, LTT: 2024-04-23 13:26:44.492884174 +0530 IST m=+54.001149151
Ticker: 2024-04-23 13:26:45.492203977 +0530 IST m=+55.000468962 , LTP: 100.000000, LTT: 2024-04-23 13:26:45.492261922 +0530 IST m=+55.000526903
Ticker: 2024-04-23 13:26:46.492505052 +0530 IST m=+56.000770034 , LTP: 176.000000, LTT: 2024-04-23 13:26:46.492555796 +0530 IST m=+56.000820776
Ticker: 2024-04-23 13:26:47.492874701 +0530 IST m=+57.001139682 , LTP: 126.000000, LTT: 2024-04-23 13:26:47.492920063 +0530 IST m=+57.001185045
Ticker: 2024-04-23 13:26:48.492295046 +0530 IST m=+58.000560028 , LTP: 110.000000, LTT: 2024-04-23 13:26:48.492355171 +0530 IST m=+58.000620153
Ticker: 2024-04-23 13:26:49.49266366 +0530 IST m=+59.000928656 , LTP: 167.000000, LTT: 2024-04-23 13:26:49.492717859 +0530 IST m=+59.000982844
Ticker: 2024-04-23 13:26:50.492153304 +0530 IST m=+60.000418292 , LTP: 142.000000, LTT: 2024-04-23 13:26:50.492216221 +0530 IST m=+60.000481210
Ticker: 2024-04-23 13:26:51.492506976 +0530 IST m=+61.000771957 , LTP: 184.000000, LTT: 2024-04-23 13:26:51.492561459 +0530 IST m=+61.000826442
Ticker: 2024-04-23 13:26:52.492940597 +0530 IST m=+62.001205582 , LTP: 177.000000, LTT: 2024-04-23 13:26:52.492991699 +0530 IST m=+62.001256681
Ticker: 2024-04-23 13:26:53.492288053 +0530 IST m=+63.000553046 , LTP: 133.000000, LTT: 2024-04-23 13:26:53.492349505 +0530 IST m=+63.000614489
Ticker: 2024-04-23 13:26:54.492595067 +0530 IST m=+64.000860045 , LTP: 187.000000, LTT: 2024-04-23 13:26:54.492648278 +0530 IST m=+64.000913255
Ticker: 2024-04-23 13:26:55.49295097 +0530 IST m=+65.001215958 , LTP: 108.000000, LTT: 2024-04-23 13:26:55.493009049 +0530 IST m=+65.001274031
Ticker: 2024-04-23 13:26:56.492186963 +0530 IST m=+66.000451938 , LTP: 195.000000, LTT: 2024-04-23 13:26:56.492227912 +0530 IST m=+66.000492890
Ticker: 2024-04-23 13:26:57.49254316 +0530 IST m=+67.000808145 , LTP: 161.000000, LTT: 2024-04-23 13:26:57.492600706 +0530 IST m=+67.000865688
Ticker: 2024-04-23 13:26:58.492910455 +0530 IST m=+68.001175432 , LTP: 188.000000, LTT: 2024-04-23 13:26:58.492950679 +0530 IST m=+68.001215658
Ticker: 2024-04-23 13:26:59.492148665 +0530 IST m=+69.000413653 , LTP: 148.000000, LTT: 2024-04-23 13:26:59.4922045 +0530 IST m=+69.000469478`

func TestAggegator(t *testing.T) {
	lines := strings.Split(data, "\n")
	eq := models.EventQueue{
		Queue: make(chan datamock.OHLC, models.QUEUE_SIZE),
	}
	for _, line := range lines {
		parsedOhlc := ParseTimeLog(line)
		eq.Queue <- parsedOhlc
		fmt.Printf("%+v\n", parsedOhlc)
	}
}

func ParseTimeLog(line string) datamock.OHLC {
	values := strings.Split(line, ",")
	layout := "2006-01-02 15:04:05.999999999 -0700 MST"
	var ohlc datamock.OHLC
	ohlc.ScriptId = 11536
	for _, value := range values {
		if strings.Contains(value, "Ticker") {
			timestampString := strings.Split(value, "Ticker")[1]
			timestampString = strings.Trim(timestampString, ": ")
			index := strings.Index(timestampString, " m=+")
			if index == -1 {
				fmt.Println("Invalid timestamp format")
				panic("failed to parse log")
			}
			timestampSubstring := timestampString[:index]
			parsedTimestamp, err := time.Parse(layout, timestampSubstring)
			if err != nil {
				fmt.Println("Error parsing TIcker timestamp:", err)
				panic("failed to parse log")
			}
			ohlc.Timestamp = parsedTimestamp
		}
		if strings.Contains(value, "LTT") {
			timestampString := strings.Split(value, "LTT")[1]
			timestampString = strings.Trim(timestampString, ": ")
			index := strings.Index(timestampString, " m=+")
			if index == -1 {
				fmt.Println("Invalid timestamp format")
				panic("failed to parse log")
			}
			timestampSubstring := timestampString[:index]
			parsedTimestamp, err := time.Parse(layout, timestampSubstring)
			if err != nil {
				fmt.Println("Error parsing LTT timestamp:", err)
				panic("failed to parse log")
			}
			ohlc.LTT = parsedTimestamp
		}
		if strings.Contains(value, "LTP") {
			ltpString := strings.Split(value, "LTP")[1]
			ltpString = strings.Trim(ltpString, ": ")
			ltpValue, err := strconv.ParseFloat(ltpString, 64)
			if err != nil {
				fmt.Println("Error parsing LTP:", err)
				panic("failed to parse log")
			}
			ohlc.LTP = ltpValue
		}
	}
	return ohlc
}
